# vim: set filetype=python :

from waflib.Task import Task

class paths_generator(Task):
    def get_paths_string(self):
        paths = '''
"""Configuration paths of Mapnik fonts and input plugins (auto-generated by SCons)."""

from os.path import normpath,join,dirname

mapniklibpath = '%s'
mapniklibpath = normpath(join(dirname(__file__),mapniklibpath))
'''

        paths += "inputpluginspath = join(mapniklibpath,'input')\n"
        paths += "fontscollectionpath = join(mapniklibpath,'fonts')\n"

        paths += "__all__ = [mapniklibpath,inputpluginspath,fontscollectionpath]\n"
        return paths

    def run(self):
        self.outputs[0].write(self.get_paths_string() % self.env.MAPNIK_LIBDIR)

def build(bld):
    pyext_dir='${PYTHONARCHDIR}/mapnik'
    bld.shlib(
        name="python-mapnik",
        features='pyext',
        target="_mapnik",
        includes="../../deps",
        source=bld.path.ant_glob("*.cpp"),
        use="mapnik FREETYPE PYCAIRO BOOST_PYTHON",
        install_path=pyext_dir)
    bld.install_files(pyext_dir, bld.path.ant_glob('mapnik/*.py'))

    path_file = bld.path.find_or_declare("paths.py")
    tsk = paths_generator(install_path=pyext_dir, env=bld.env)
    tsk.set_outputs(path_file)
    bld.add_to_group(tsk)
    bld.install_files(pyext_dir, path_file)
